name: ARM32 Pull, Save & Push Docker Image

on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请输入 Docker 镜像名称（多个用英文逗号分隔）'
        required: true
        default: 'alpine:latest'

jobs:
  pull_and_package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Clean up Docker to free space
      run: |
        set -x
        docker system prune -a -f
        docker volume prune -f

    - name: Login to Aliyun Registry (optional)
      if: ${{ secrets.DOCKER_USERNAME != '' && secrets.DOCKER_PASSWORD != '' }}
      uses: docker/login-action@v3
      with:
        registry: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Pull, Save and Push Docker Images
      run: |
        set -x
        images="${{ github.event.inputs.docker_images }}"
        IFS=',' read -r -a image_array <<< "$images"
        for image in "${image_array[@]}"; do
          echo "🚀 Pulling ${image} for linux/arm/v7 ..."
          docker pull --platform linux/arm/v7 --progress=plain "${image}"
          TAR_NAME="${image//\//_}-arm32.tar"
          docker save "${image}" -o "${TAR_NAME}"
          echo "📦 Saved as ${TAR_NAME}"

          if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_PASSWORD }}" ]; then
            BASENAME=$(basename "${image}")
            TARGET="registry.cn-hangzhou.aliyuncs.com/${{ secrets.ALIYUN_REPO_NAMESPACE }}/${BASENAME}-arm32"
            echo "☁️  Tagging & pushing to ${TARGET}"
            docker tag "${image}" "${TARGET}"
            docker push "${TARGET}"
          fi
        done

    - name: Compress the TAR files
      run: |
        set -x
        tar -czf arm32-images.tar.gz *-arm32.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-images-arm32
        path: arm32-images.tar.gz
        retention-days: 1

    - name: Clean up intermediate files
      run: |
        set -x
        rm -f *-arm32.tar
